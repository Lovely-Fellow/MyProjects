define(["./common","angular","./context-service","./auth-service","config-service"],function(t,e){"use strict";t.factory("DiagnosticTestService",["$q",function(t){function e(e,o){this.WAITING_STATUS="WAITING",this.ERROR_STATUS="ERROR",this.OK_STATUS="OK",this.PROGRESS_STATUS="PROGRESS",this.WARNING_STATUS="WARNING",this.output=[],this.status=this.WAITING_STATUS,this.name=e,this.hint=o,this.deferred=t.defer(),this.elapsed=""}return e.prototype.log=function(t){this.output.push(t)},e.prototype.setStatus=function(t){this.status=t,this.deferred.resolve(t),this.elapsed=(new Date).getTime()-this.timeStart},e.prototype.getStatus=function(){return this.status},e.prototype.isError=function(){return this.status===this.ERROR_STATUS},e.prototype.isOk=function(){return this.status===this.OK_STATUS},e.prototype.isWarning=function(){return this.status===this.WARNING_STATUS},e.prototype.ok=function(){this.setStatus(this.OK_STATUS)},e.prototype.error=function(){this.setStatus(this.ERROR_STATUS)},e.prototype.warning=function(){this.setStatus(this.WARNING_STATUS)},e.prototype.getLogs=function(){return this.output},e.prototype.start=function(){return this.timeStart=(new Date).getTime(),this.status=this.PROGRESS_STATUS,this.run()},e.prototype.toJson=function(){return{status:this.status,name:this.name,output:this.output,elapsed:this.elapsed,hint:this.hint}},e}]),t.factory("TLClientStatusService",["$rootScope","tlSocket","DiagnosticTestService",function(t,o,r){function n(){r.call(this,"TL Client Connection Status","Checks the current status of the connection to Transport Layer")}return e.extend(n.prototype,r.prototype),n.prototype.run=function(){return t.tlConnected?this.ok():this.error(),this.deferred.promise},n}]),t.factory("TLServerStatusService",["$rootScope","tlSocket","DiagnosticTestService","$timeout",function(t,o,r,n){function i(t){r.call(this,"TL Server Status","Checks if client can communicate with Transport Layer"),this.timeout=t||1e4}return e.extend(i.prototype,r.prototype),i.prototype.run=function(){var e=this,r=t.tlConnected,i=n(function(){e.log("Timeout in pinging the server. Client is tlConnected: "+r),e.error()},e.timeout);return o.send("core.ping").then(function(){t.tlConnected?(n.cancel(i),e.ok(),r||e.log("Reconnected!")):(n.cancel(i),e.log("Connection detection failed!"),e.error())}).catch(function(t){n.cancel(i),e.log(t),e.error()}),this.deferred.promise},i}]),t.value("WebSocketService","undefined"!=typeof WebSocket?WebSocket:null),t.factory("WebSocketTestService",["$timeout","$rootScope","WebSocketService","DiagnosticTestService",function(t,o,r,n){function i(t){n.call(this,"Public WebSocket","Checks if the browser can use websocket using a 3rd party websocket server"),this.timeout=t||1e4}return e.extend(i.prototype,n.prototype),i.prototype.run=function(){var e=this;if(r){var n=t(function(){e.log("Timeout"),e.error(),e.websocket.close()},e.timeout);e.websocket=new r("wss://echo.websocket.org"),e.websocket.onopen=function(){e.websocket.send("echo")},e.websocket.onmessage=function(r){t.cancel(n),e.websocket.close(),"echo"===r.data?o.$apply(function(){e.ok()}):o.$apply(function(){e.log(r.data),e.error()})},e.websocket.onerror=function(r){t.cancel(n),o.$apply(function(){e.log(r.data),e.error()})}}else e.error(),e.log("WebSocket Not Supported!");return this.deferred.promise},i}]),t.factory("VersionTestService",["$http","appVersion","eoDashConfig","DiagnosticTestService",function(t,o,r,n){function i(){n.call(this,"App Version","Check if we have the latest dash version loaded")}return e.extend(i.prototype,n.prototype),i.prototype.run=function(){var e=this;return t.get(r.baseURL+r.localAssetsPath+"version.json?t="+Date.now()).then(function(t){t.data.version===o?e.ok():(e.log("Current Version "+o+" differs from last version "+t.data.version),e.warning())})},i}]),t.factory("NetworkTestService",["$http","DiagnosticTestService",function(t,o){function r(){o.call(this,"Public Network","Checks internet connectivity using a 3rd party service")}return e.extend(r.prototype,o.prototype),r.prototype.run=function(){var e=this;return t.get("https://aws.random.cat/meow").success(function(t){e.log(t),e.locationData=t,e.ok()}).error(function(t){t=t||"Network detection failed!",e.log(t),e.error()}),this.deferred.promise},r.prototype.getLocationData=function(){return this.locationData},r}]),t.factory("PingTestService",["$q","tlSocket","DiagnosticTestService",function(t,o,r){function n(t){r.call(this,"TL Ping","Check latency to Transport Layer"),this.repeats=t||3}return e.extend(n.prototype,r.prototype),n.prototype.ping=function(){var t=(new Date).getTime(),e=this;return o.send("core.ping").then(function(){var o=(new Date).getTime();e.log("Ping: "+(o-t)+" ms")}).catch(function(t){e.log(t),e.error()})},n.prototype.run=function(){for(var e=this,o=t.when({}),r=function(){return e.ping()},n=0;n<e.repeats;n++)o=o.then(r);return o.then(function(){e.isError()||e.ok()}),this.deferred.promise},n}]),t.factory("WatchersTestService",["$window","DiagnosticTestService",function(t,o){function r(){o.call(this,"Watchers","Check the current number of angular watchers")}return r.WATCH_LIMIT=2500,e.extend(r.prototype,o.prototype),r.prototype.run=function(){var o,n,i,s=0,c=t.document.all,u=c.length,a={};for(o=0;o<u;o++)n=e.element(c[o]).data(),n.hasOwnProperty("$scope")&&n.$scope.$$watchers&&(i=n.$scope,a[i.$id]||(a[i.$id]=!0,s+=i.$$watchers.length));return s>r.WATCH_LIMIT?this.warning():this.ok(),this.log("Watchers count: "+s),this.deferred.promise},r}]),t.factory("ContactsTestService",["eoAuth","DiagnosticTestService","tlDirectory2",function(t,o,r){function n(){o.call(this,"Contacts API","Checks if Contact API is currently reachable via Transport Layer")}return e.extend(n.prototype,o.prototype),n.prototype.run=function(){var e=this;return r.getPersons({uids:[t.user.uid]}).then(function(t){t&&t.persons&&1===t.persons.length?e.ok():(e.error(),e.log("Invalid Response!"),e.log(t))}).catch(function(t){e.log(t),e.error()}),this.deferred.promise},n}]),t.factory("SearchTestService",["tlUser","tlSearch","DiagnosticTestService",function(t,o,r){function n(){r.call(this,"Search API","Checks if Search API is currently reachable via Transport Layer")}return e.extend(n.prototype,r.prototype),n.prototype.run=function(){var t=this;return o.spotlight({query:"test",limit:3}).then(function(o){o&&!e.isUndefined(o.total)&&null!==o.total?t.ok():(t.error(),t.log("Invalid Response!"),t.log(o))}).catch(function(e){t.log(e),t.error()}),this.deferred.promise},n}]),t.factory("RoomsTestService",["tlRoom","DiagnosticTestService","eoDashContext","upRoomApi",function(t,o,r,n){function i(){o.call(this,"Rooms API","Checks if Rooms API is currently reachable via Transport Layer")}return e.extend(i.prototype,o.prototype),i.prototype.run=function(){function o(t){i.log(t),i.error()}var i=this,s={privacy:"public",isSubscribed:!1,limit:3},c=null;return c=r.webApiEnabled()?n.getRooms(s).then(function(t){return t},function(e){return o(e),t.getRooms(s)}):t.getRooms(s),c.then(function(t){t&&!e.isDefined(t.errors)?i.ok():(i.error(),i.log("Invalid Response!"),i.log(t))}).catch(o),this.deferred.promise},i}]),t.factory("FilesTestService",["tlCollabFiles","DiagnosticTestService",function(t,o){function r(){o.call(this,"Files API","Checks if Files API is currently reachable via Transport Layer")}return e.extend(r.prototype,o.prototype),r.prototype.run=function(){var o=this;return t.confirm({fileUids:["uid1"]}).then(function(){o.ok()}).catch(function(t){e.isArray(t)&&404===t[0].code?o.ok():(o.log(t),o.error())}),this.deferred.promise},r}]),t.factory("PluginsTestService",["tlPlugins","eoAuth","DiagnosticTestService",function(t,o,r){function n(){r.call(this,"Plugins API","Checks if Plugins API is currently reachable via Transport Layer")}return e.extend(n.prototype,r.prototype),n.prototype.run=function(){var e=this;return t.getApplicationList().then(function(t){t&&t.applications?e.ok():(e.error(),e.log("Invalid Response!"),e.log(t))}).catch(function(t){e.log(t),e.error()}),this.deferred.promise},n}]),t.factory("eoDiagnosticTestRunner",["eoAuth","deviceDetector","$q","TLClientStatusService","NetworkTestService","PingTestService","ContactsTestService","RoomsTestService","SearchTestService","VersionTestService","WatchersTestService","WebSocketTestService","TLServerStatusService","FilesTestService","PluginsTestService","eoModelFactory","eoClientLog","eoErrorHandler","tlSocket",function(t,o,r,n,i,s,c,u,a,p,h,l,f,d,g,S,y,v,T){var w,m=[],k=!1,A=function(){return k},R=function(){var t=[];return e.forEach(m,function(e){t.push(e.toJson())}),t},b=function(){return w.getLocationData()},C=function(){var t=R(),r=b(),n=[];return n.push(e.extend({infoType:"location"},r)),this.organization&&n.push(e.extend({infoType:"organization"},{uid:this.organization.uid,rid:this.organization.rid,name:this.organization.name})),this.user&&n.push(e.extend({infoType:"user"},{uid:this.user.uid,nid:this.user.legacyId,rid:this.user.rid,fullName:this.user.fullName})),n.push(e.extend({infoType:"device"},{userAgent:o.raw.userAgent,os:o.os,browser:o.browser,device:o.device})),e.forEach(t,function(t){t.output=e.toJson(t.output),n.push(e.extend({infoType:t.name},t))}),n.push({infoType:"frames",frames:e.toJson(T.getEvents())}),n.push({infoType:"errors",errors:e.toJson(v.all())}),n},D=function(t,e){var o=this.getDiagnoseData();t&&o.push({infoType:"description",description:t}),e&&(e.antivirus&&o.push({infoType:"antivirus",antivirus:e.antivirus}),e.firewall&&o.push({infoType:"firewall",antivirus:e.firewall}));var r="Diagnose";t&&"Auto generated report"===t&&(r="Auto generated report");var n=S.get("ClientLog",{eventName:r,logType:8,dataList:o});return y.send(n)};return{run:function(o){k=!0,m.length=0,w=new i,o&&o.fastAutoRun?(m.push(w),m.push(new l(3e3)),m.push(new n),m.push(new f(3e3)),m.push(new s(1)),m.push(new p),t.isAuthenticated()&&m.push(new u)):(m.push(w),m.push(new l(1e4)),m.push(new n),m.push(new f(1e4)),m.push(new s(3)),m.push(new p),m.push(new h),t.isAuthenticated()&&(m.push(new u),m.push(new c),m.push(new a),m.push(new d),m.push(new g)));var S=r.when({});return e.forEach(this.tests,function(t){S=S.then(function(){return t.start()})}),S.then(function(){return k=!1,R()})},isRunning:A,tests:m,getResults:R,report:D,getLocation:b,getDiagnoseData:C}}])});