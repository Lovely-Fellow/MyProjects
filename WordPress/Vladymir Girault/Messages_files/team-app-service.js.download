define(["./common","./debug-service","./users-service","./auth-service","./screen-snap-service"],function(e){"use strict";e.factory("eoTeamAppDashHandler",["$injector","$window","$rootScope","$log","eoAuth","eoUsers","eoScreenSnap","tlSettings",function(e,n,t,o,i,r,s,c){var u=e.get("$state");return{installOTAHandler:function(){n.opener&&(n.oauth=n.opener.oauth),n.otaDash={gotoRoom:function(e){u.go("rooms.chat",{id:e}),t.$emit("view:main:show")},getSettings:function(e){if(!i.isAuthenticated())return void e({message:"User is not logged in"});r.getUserSettings(i.user.userId).then(function(n){e(null,n)},function(n){e(n)})},saveSettings:function(e,n){if(!i.isAuthenticated())return void n({message:"User is not logged in"});r.saveUserSettings(i.user.userId,e).then(function(e){n(null,e)},function(e){n(e)})},updateScreenSnapShortcutInfo:function(e){s.updateShortcuts(e)},saveSnap:function(e,n){if(e)return void o.warn("Error saving snap "+e);n&&s.saveSnap(n)},getOutOfOfficeSettings:function(e){if(!i.isAuthenticated())return void e({message:"User is not logged in"});c.getPreferencesByComponent({component:"DashOutOfOffice",global:"true"}).then(function(n){e(null,n)},function(n){e(n)})},saveMultiCompSettings:function(e,n){if(!i.isAuthenticated())return void n({message:"User is not logged in"});c.saveMultiCompSettings(e).then(function(e){n(null,e)},function(e){n(e)})},updateDownloadStatus:function(e){e&&t.$emit("annotation:close")}},n.opener&&(n.oauth=n.opener.oauth)}}}]),e.factory("eoTeamApp",["$window","$log","$q","$location","$timeout","$rootScope","eoDebug",function(e,n,t,o,i,r,s){var c=function(t,o,r){if(e.notifyOTA)try{r?i(function(){e.notifyOTA(t,o)},500,!1):e.notifyOTA(t,o)}catch(e){n.error(e)}},u=function(e){return o.protocol()+"://"+o.host()+":"+o.port()+e};return{install:function(){var e=this;this.initDebugging(),r.$on("messageCounterChanged",function(n,t){e.triggerMessageCounterChanged(t)}),r.$on("desktopNotification",function(n,t){e.triggerDesktopNotification(t)})},notifyOTA:function(e,n,t){c(e,n,t)},notifyUpdate:function(e){c("dashUpdated",e)},showSettings:function(){return!this.isIntegratedDesign()},getAccessToken:function(){var n;return e.opener.oauth&&(n=e.opener.oauth.getCurentAccessToken()),n},isIntegratedDesign:function(){return!(!e.checkSupport||!e.checkSupport("support:integrated_design"))},refreshAccessToken:function(n,t){e.opener.oauth&&e.opener.oauth.refreshCurentAccessToken(n,t)},initDebugging:function(){s.disableColors();var n=console.log;console.log=function(){var e=Array.prototype.slice.call(arguments);n.apply(console,[e.join(" ")])},s.disableAll(),s.enableGroup("notifications"),e.localStorage.removeItem("debug")},triggerMessageCounterChanged:function(e){c("messageCounterChanged",e)},getScreenSnapConfig:function(){var n=t.defer();return e.checkSupport?e.checkSupport("support:screensnaps",function(e,t){n.resolve({supported:e,shortcuts:t})}):n.resolve({supported:!1}),n.promise},snapCustomArea:function(){c("screensnap",{snapType:"custom_area"},!0)},snapActiveScreen:function(){c("screensnap",{snapType:"active_screen"},!0)},copyToClipBoard:function(e){c("copyToClipboard",{data:e})},triggerDesktopNotification:function(e){var n="/rooms/"+e.roomId;s.debug("notification:events")("OTA desktop notification",e.title),c("desktopNotification",{title:e.title,body:e.body,iconUrl:u(e.iconUrl),clickUrl:u(n),roomId:e.roomId,roomType:e.roomType})}}}]),e.run(["$rootScope","$window",function(e,n){var t=!1;e.$on("auth:change",function(e,o){o&&o.user&&!t&&(t=!0,n.opener&&n.opener.dashOnUserReady&&n.opener.dashOnUserReady())})}])});