define(["angular","lodash"],function(e){"use strict";function o(e){return e.map(function(e,o){return o+1+". "+e+"<br/>"}).join("")}return["$scope","$state","room","eoAuth","eoGoogleAnalytics","eventLog","eoFeedbackDialog","upMarkdownItFormatFilter","eoDashConfig","eoDashContext","$timeout","$sce","eoAlert",function(t,a,n,r,s,i,l,d,c,u,p,h,m){if(!c.feature.notes.enabled)return void a.go("rooms.chat",{id:n.roomId});t.canEditNote=function(){return n.isReadOnly||u.isReadOnlyMode()},t.notes=n.hasNotes()?n.roomNote:"",t.notesHtml=h.trustAsHtml(d(t.notes,{extended:!0})),t.placeholder="Use this space to save your thoughts however you’d like: <br/><br/>",r.isClient()?(n.isInterviewRoom()?t.placeholder+=o(["Prepare talking points for the interview","Record questions for later follow-up","Organize project plans and deliverable dates","Make note of the freelancer’s strengths and weaknesses"])+"<br/>":(t.placeholder="Use this space to save your thoughts however you’d like: <br/><br/>",t.placeholder+=o(["Type notes on your conversation","Organize project plans and feedback","Keep a record of deliverable dates","Capture key ideas and inspiration"])+"<br/>"),t.placeholder+="Notes you type are only visible to you, and can always be accessed through your messages with this freelancer.<br/><br/>",t.placeholder+="Notes are saved automatically as you type."):(n.isInterviewRoom()?t.placeholder+=o(["Prepare talking points for your interview","Record questions for later follow-up","Organize project plans and deliverable dates","Make note of key client preferences"])+"<br/>":t.placeholder+=o(["Type notes on your conversation","Organize your project plans","Keep a record of to-dos and due dates","Make note of key client preferences"])+"<br/>",t.placeholder+="Notes you type are only visible to you, and can always be accessed through your messages with this client.<br/><br/>",t.placeholder+="Notes are saved automatically as you type."),t.saveStatus="";var v;t.updateNotes=function(e){if(e!==t.notes){if(e.length>5e3)return void m.inline({type:"danger",template:"You can't save more than 5000 characters in notes"});t.saveStatus="Saving...",v&&p.cancel(v),t.notes=e,t.notesHtml=h.trustAsHtml(d(e,{extended:!0})),n.updateNotes(e).then(function(){t.saveStatus='<div class="dash-icon dash-icon-ok"></div> Saved',v=p(t.clearStatus,1e4);var e={event:"save",location:"room notes panel",sublocation:"room notes",timestamp:new Date,userId:r.user.userId,data:[{org_id:r.user.orgId,room_id:n.roomId,room_name:n.roomName,action:"room notes saved"}]};i.log(e),s.ga("Notes","room notes","save",{roomId:n.roomId})})}};var g={event:"click",location:"room nav header",sublocation:"room notes",timestamp:new Date,userId:r.user.userId,data:[{org_id:r.user.orgId,room_id:n.roomId,action:"room notes displayed"}]};i.log(g),s.ga("Notes","open notes panel","nav header click",{roomId:n.roomId}),t.leaveFeedback=function(){l.show({title:"Personal Notepad Feedback",sublocation:"notes"})},t.clearStatus=function(){t.saveStatus=""};var y=t.$watch("notesHtml",function(){t.$evalAsync(function(){e.element('[id^="notes_checkbox_"]').bind("click",function(e){var o="notes_checkbox_".length,a=parseInt(e.target.id.substring(o)),n=e.target.checked?"- [x] ":"- [ ] ",r=0,s=t.notes.replace(/(- \[x\] )|(- \[ \] )/gi,function(e){return r++,r===a+1?n:e});return t.updateNotes(s),!1})})});t.$on("$destroy",function(){y(),v&&p.cancel(v)}),t.toggleEditor=function(o){var t=e.element(o.target);(t.is("a")||t.parents("pre>a").length)&&o.stopImmediatePropagation()}}]});