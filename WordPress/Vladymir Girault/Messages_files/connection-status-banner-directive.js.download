define(["./layout","angular"],function(t,n){"use strict";function e(t,e,o,i,c){var s=this;this._dashMetrics=c,this.tlConnected=!0,this.displayConnectionLostMsg=!1,this.displayConnetionLimitReached=!1,this.tlSocket=i,this.$interval=o,this.online=!0,n.forEach(["offline","reconnecting","disconnect","reconnect","connect","close"],function(t){i.on(t,function(n){c.count(t),s[t](n)})}),n.element(t).on("beforeunload",function(){s.displayConnectionLostMsg=!1}),n.element(t).on("focus",function(){e(function(){i.isConnected()||s.reconnectNow()},100)}),e(function(){s.displayConnectionLostMsg=!0},3500)}e.$inject=["$window","$timeout","$interval","tlSocket","upDashMetrics"],e.prototype.calculateTimeToReconnect=function(){this.timeToReconnect=this.tlSocket.getReconnectCountdown()},e.prototype.disconnect=function(){var t=this;this.tlConnected=!1,this.status="disconnect",this.stopReconnectTimer=this.$interval(function(){t.calculateTimeToReconnect()},1e3),this.online=!0,this.calculateTimeToReconnect()},e.prototype.reconnect=function(){this.connect()},e.prototype.close=function(t){this.displayConnetionLimitReached="CONN_CLOSED_REASON_CONNS_LIMIT_REACHED"===t,this.status="close"},e.prototype.connect=function(){this.online=!0,this.tlConnected=!0,this.displayConnetionLimitReached=!1,this.status="connect",this.$interval.cancel(this.stopReconnectTimer)},e.prototype.offline=function(){this.online=!1,this.status="offline"},e.prototype.reconnecting=function(){this.online=!0,this.tlConnected=!1,this.status="reconnecting",this.$interval.cancel(this.stopReconnectTimer)},e.prototype.reconnectNow=function(){this.displayConnetionLimitReached=!1,this.tlSocket.reconnect()},e.$inject=["$window","$timeout","$interval","tlSocket","upDashMetrics"],t.controller("eoConnectionStatusBannerController",e),t.directive("eoConnectionStatusBanner",function(){return{restrict:"EA",scope:!0,templateUrl:function(){return t.templatePath+"connection-status-banner-directive.html"},controllerAs:"ctrl",controller:"eoConnectionStatusBannerController"}})});