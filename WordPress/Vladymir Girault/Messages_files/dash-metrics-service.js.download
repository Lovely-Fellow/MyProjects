define(["./common","angular"],function(t,e){"use strict";t.provider("upMetricsService",function(){this.$get=["eoMetricsService","$log",function(t,i){var n=e.copy(t);return n.addMetric=function(t,n,r){if(r=!0===r,n=e.isUndefined(n)?1:parseFloat(n),!isFinite(n)||n<0||n>1)return void i.warn('The eoMetricsService.addMetric method supports only a float values between 0 and 1 of "rate" argument. Provided: '+n);n<1&&(t=t+"|@"+n),(r||this.checkRate(n))&&this.sendMetric(t)},n}]}),t.provider("upDashMetrics",function(){var t={enabled:!0,endpoint:"/upi/psmetrics",pageId:"Messages",trafficRate:1,namespacePrefix:"agate.metrics",namespaceSuffix:"ClientSide",context:"Integrated"};this.configure=function(i){if(!i)return void console.warn("Attempting to configure upDashMetrics without a valid configuration object!\nFalling back to default values, which is likely not the intended outcome!");i=e.extend({},t,i),i.enabled=!!i.enabled,i.trafficRate=+i.trafficRate,Object.keys(t).forEach(function(t){if(e.isUndefined(i[t]))throw new Error('The configuration property "'+t+'" must be set to an explicit value (it can not be undefined).')}),t=i};var i={COUNTING:"c",TIMING:"ms",GAUGES:"g",SETS:"s"},n=function(t,e,i,n){this._prefix=t||"",this._commitOnce=!!e,this._committed=!1,this._performance=n,this._dashMetrics=i,this._metrics=[]};n.prototype={time:function(t,e){return e||(e=this._performance.now()),this._metrics.push({method:"time",name:this._prefix+t,value:e}),this},count:function(t,e){return this._metrics.push({method:"count",name:this._prefix+t,value:e}),this},gauge:function(t,e){return this._metrics.push({method:"gauge",name:this._prefix+t,value:e}),this},commit:function(){if(!this._committed||!this._commitOnce){if(this._committed=!0,this._dashMetrics.checkRate()){var t=this;this._metrics.forEach(function(e){t._dashMetrics[e.method](e.name,e.value,!0)})}this._metrics=[]}return this}};var r=function(){return(new Date).getTime()},s={},c=function(i,n,r,s){this._timing=i,this._metricService=n,this._log=r,this._performance=s,this._config=e.extend({},t),this.setEndPoint(this._config.endpoint)};c.prototype={configure:function(t){this._config=e.extend({},this._config,t),t.endpoint&&this.setEndPoint(t.endpoint),this._getMetricNamespace(!0)},setEndPoint:function(t){this._metricService.setEndPoint(t)},checkRate:function(){return this._metricService.checkRate(this._config.trafficRate)},isEnabled:function(){return this._config.enabled},init:function(){this._sampleLoadTiming()},time:function(t,e,n){return e||(e=this._performance.now()),this._sendMetric(t,e,i.TIMING,n)},count:function(t,e,n){return e=e||1,this._sendMetric(t,e,i.COUNTING,n)},gauge:function(t,e,n){return this._sendMetric(t,e,i.GAUGES,n)},createSequence:function(t,e){return new n(t,e,this,this._performance)},getFirstRunSequence:function(){return this._firstRun||(this._firstRun=this.createSequence("firstRun",!0)),this._firstRun},startMetric:function(t){s[t]=r()},endMetric:function(t){if(s[t]){var e=r(),i=s[t];this.time(t,e-i),delete s[t]}},_getMetricNamespace:function(t){if(t||!this._namespace){if(!this._config.pageId)throw new Error("Page Id must be defined for metrics to be recorded");this._namespace=[this._config.namespacePrefix,this._config.pageId+this._config.context,this._config.namespaceSuffix].join(".")}return this._namespace},_sampleLoadTiming:function(){if(this.isEnabled())return this.checkRate(this._config.trafficRate)?void 0:void this._log.info("Intentionally excluded this load timing sample")},_getTimes:function(){return this._times||(this._times=this._timing.getTimes({simple:!1})),this._times},_getMetric:function(t){var e=t(this._getTimes());if(e=parseInt(e,10),!isNaN(e))return e;this._log.warn("Incorrect value for psmetric: "+t)},_sendMetric:function(t,e,i,n){if(this.isEnabled()){var r=[this._getMetricNamespace(),t].join(".")+":"+e.toFixed(0)+"|"+i;this._metricService.addMetric(r,this._config.trafficRate,n)}}},this.$get=["upMetricsService","$window","$log",function(e,i,n){var r=new c(i.timing,e,n,i.performance);return r.configure(t),r}]})});