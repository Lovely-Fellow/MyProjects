define(["./common","angular","config-service","./auth-service","./users-service"],function(n,e){"use strict";n.constant("ORGANIZATION_COUNTER_FETCH_INTERVAL",12e5),n.factory("eoOrganizationUnreadUpdater",["$interval","$rootScope","$timeout","eoDashConfig","tlUser","eoAuth","eoChannel","eoModelFactory","eoUsers","tlRoom","eoDashCache","ORGANIZATION_COUNTER_FETCH_INTERVAL","eoDashContext","upRoomApi","upDashMetrics",function(n,t,o,s,u,a,i,r,c,g,f,d,h,C,l){var p,A=!1,m=!1,M=function(){if(a.isAuthenticated())return c.getLocalSettings(a.user.userId).then(function(n){m=n&&n.counter&&n.counter.show&&"all"===n.counter.show})},I=function(n){M().then(function(){e.forEach(a.user.organizations,function(e){N(e.uid,e.unreadCount,e.mentionsCount,n)})})};M();var N=function(n,e,t,o){var s=a.getOrganization(n);if(s&&(o||s.unreadCount!==e||s.mentionsCount!==t)){s.setUnreadCount(e),s.setMentionsCount(t);var u=m?e:t,c=r.get("Badge",{id:1,type:"dash",unread:isNaN(u)?0:u,unimportant:e,port:n});i.publish("channels.badges.dash",c)}},b=function(n){if(e.forEach(n,function(n){N(n.orgId,n.unreadStoriesCount,n.mentionsCount)}),s.enableDashCache){var t=f.get(a.user.userId);try{t.updateCounts(n)}catch(n){}}},v=function(){function n(n){M().then(function(){b(n.counts)})}h.webApiEnabled()?(l.startMetric("getMessageCountsWebApi"),C.getMessageCounts().then(function(e){l.endMetric("getMessageCountsWebApi"),n(e)},function(e){l.count("getMessageCountsWebAPIFailure"),l.endMetric("getMessageCountsWebApi"),console.warn("failed to get message counts using web api:",e),g.getMessageCounts().then(n)})):g.getMessageCounts().then(n)};return t.$on("messageCounterChanged",function(n,e){a.isAuthenticated()&&N(a.user.orgId,e.unread,e.unreadImportant)}),t.$on("settings:changed",function(){v()}),t.$on("organization:change",function(){o(function(){I()})}),g.$on("updateRoomUserNotifcation",function(n){n&&n.orgCounts&&b(n.orgCounts.counts)}),{start:function(){A||(v(),p=n(v,d,0,!1),A=!0)},stop:function(){A&&(n.cancel(p),p=A=null)}}}])});